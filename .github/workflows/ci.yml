name: CI
on: [push, pull_request]

env:
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       include:
        - node-version: 10.x
          test-on-old-node: 1
        - node-version: 12.x
          # test-on-brower: 1
        - node-version: 14.x
          # test-http2: 1
        - node-version: 16.x
          # test-http2: 1
    steps:
      - uses: actions/checkout@v2

      - name: Install Node - ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies On Node 10
        if: ${{ matrix.node-version == '10.x' }}
        run: yarn install --ignore-optional --ignore-scripts
      - name: Install Dependencies On Node ${{ matrix.node-version }}
        if: ${{ matrix.node-version != '10.x' }}
        run: yarn install
      - name: Build
        run: npm run build
      - name: Test On Node ${{ matrix.node-version }}
        env:
          BROWSER: ${{ matrix.test-on-brower }}
          HTTP2_TEST: ${{ matrix.test-http2 }}
          OLD_NODE_TEST: ${{ matrix.test-on-old-node }}
        run: |
          npm run test
      - name: Coverage On Node ${{ matrix.node-version }}
          npm run coverage
